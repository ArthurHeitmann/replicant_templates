// Woeful_Wolf
// Yretenai

struct fileResourceData (int arraySize)
{
    int id;
    int array[arraySize];
};

struct {
    char    id[4];
    uint32  version;
    uint32  packFileTotalSize;
    uint32  packFileSerializedSize;
    uint32  packFileResourceSize;
    uint32  pathCount;
    local uint32 pathsStartOffset = FTell();
    uint32  offsetToPaths;
    uint32  assetPackCount;
    local uint32 assetPacksStartOffset = FTell();
    uint32  offsetToAssetPacks;
    uint32  fileCount;
    local uint32 filesStartOffset = FTell();
    uint32  offsetToFiles;
} header;

if (header.pathCount != 0) {
FSeek( header.pathsStartOffset + header.offsetToPaths );
struct{
    struct {
        uint32  hash<format=hex>;
        local uint32 pathStartOffset = FTell();
        uint32  offsetToPath;
        uint32  unknown0;
        local uint returnPos = FTell();
        FSeek(pathStartOffset + offsetToPath);
        string path;
        FSeek(returnPos);
    } path[header.pathCount] <optimize=false>;
} paths;
}

if (header.assetPackCount != 0) {
FSeek( header.assetPacksStartOffset + header.offsetToAssetPacks );
struct {
    struct {
        uint32  hash<format=hex>;
        local uint32 nameStartOffset = FTell();
        uint32  offsetToName;
        uint32  fileSize;
        local uint32 contentStartOffset = FTell();
        uint32  offsetToContentStart;
        uint32  offsetToContentEnd;
        FSeek(nameStartOffset + offsetToName);
        string name;
        
        FSeek( contentStartOffset + offsetToContentStart );
        #include "BXON.bt"
    } assetPack[header.assetPackCount] <optimize=false>;
} assetPacks;
}

if (header.fileCount != 0) {
FSeek( header.filesStartOffset + header.offsetToFiles );
struct {
    struct {
        uint32  hash<format=hex>;
        local uint32 nameStartOffset = FTell();
        uint32  offsetToName;
        uint32  fileSize;
        local uint32 contentStartOffset = FTell();
        uint32  offsetToContentStart;
        uint32  Unknown0;
        local uint32 returnPos = FTell();
        FSeek(nameStartOffset + offsetToName);
        string name;        
        FSeek(returnPos);
    } file[header.fileCount] <optimize=false>;
} files;
}